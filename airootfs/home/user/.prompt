branch () {
  git branch 2> /dev/null | sed -e "/^[^*]/d" -e "s/* \(.*\)/  [\\1]/"
}

timer_start () {
  local now=''
  now=$(date +%s.%3N)
  TIMER=${TIMER:-${now}}
}

timer_stop () {
  local now=''
  now=$(date +%s.%3N)

  ELAPSED=$(echo "${now}" | awk -v timer=${TIMER} '{
    elapsed = ($0 - timer)
    
    msecs = int(elapsed*1000 + 0.5)
    secs = int(elapsed + 0.5)
    mins = int(elapsed/60 + 0.5)
    hours = int(elapsed/60/60 + 0.5)

    if (msecs < 10) printf "00%dms", msecs
    else if (msecs < 100) printf "0%dms", msecs
    else if (msecs < 1000) printf "%dms", msecs
    else if (secs < 10) printf "00%ds ", secs
    else if (secs < 100) printf "0%ds ", secs
    else if (secs < 180) printf "%ds ", secs
    else if (mins < 10) printf "00%dm ", mins
    else if (mins < 100) printf "0%dm ", mins
    else if (mins < 180) printf "%dm ", mins
    else if (hours < 10) printf "00%dh ", hours
    else if (hours < 24) printf "0%dh ", hours
    else print "slow "
  }')
  
  unset TIMER
}

trap 'timer_start' DEBUG

if [ -z "$PROMPT_COMMAND" ]; then
  PROMPT_COMMAND="timer_stop"
else
  PROMPT_COMMAND="$PROMPT_COMMAND; timer_stop"
fi

dir_color () {
  echo -e '\e[1;37m'
}

exit_color () {
  if [ $? = 0 ]; then
    echo -e '\e[1;33m'
  else
    echo -e '\e[1;35m'
  fi
}

user_color () {
  echo -e '\e[1;35m'
}

git_color () {
  echo -e '\e[1;35m'
}

reset_color () {
  echo -e '\e[m'
}

if [ "$(id -u)" = 0 ]; then
  PS1='\[$(exit_color)\]${ELAPSED} \[$(user_color)\][\u] \[$(dir_color)\]\W\[$(git_color)\]$(branch)\[$(reset_color)\]  '
else
  PS1='\[$(exit_color)\]${ELAPSED} \[$(dir_color)\]\W\[$(git_color)\]$(branch)\[$(reset_color)\]  '
fi

PS2=' '
