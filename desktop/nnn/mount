#!/usr/bin/env sh

while true
do
  clear

  echo -e "Mount/unmount a disk device"
  read -rep "(l)ocal (r)emote (q)uit: " REPLY

  echo -e ""

  if [ "$REPLY" = "l" ]; then
    lsblk

    read -rep "Enter device name (sdXX): " DEVICE
    echo -e ""

    if grep -qs "$DEVICE " /proc/mounts; then
      sync

      if udisksctl unmount -b /dev/"$DEVICE"
      then
        echo -e "Device '$DEVICE' unmounted successfully"

        if udisksctl power-off -b /dev/"$DEVICE"
        then
          echo -e "Device '$DEVICE' can now be ejected"
        else
          echo -e "Failed to power off device '$DEVICE'"
        fi
      else
        echo -e "Failed to umount device '$DEVICE'"
      fi
    else
      if udisksctl mount -b "/dev/$DEVICE"
      then
        echo -e "Device '$DEVICE' mounted successfully"

        if [ ! -L "$HOME/media/local" ]; then
          ln -s /run/media/$USER $HOME/media/local
        fi
      else
        echo -e "Failed to mount device '$DEVICE'"
      fi
    fi
  elif [ "$REPLY" = "r" ]; then
    read -rep "Protocol: [smb] " PROTOCOL
    PROTOCOL=${PROTOCOL:-"smb"}

    read -rep "Host name: " HOST
    read -rep "Shared folder: " SHARED
    SHARED="${SHARED,,}"

    echo -e ""

    DEVICE="$PROTOCOL://$HOST/$SHARED"

    if gio mount -l | grep "$DEVICE"; then
      sync

      if gio mount -u "$DEVICE"
      then
        echo -e "Device '$DEVICE' unmounted successfully"
      else
        echo -e "Failed to umount device '$DEVICE'"
      fi
    else
      gio mount "$DEVICE"

      if [ $? -eq 0 ]; then
        echo -e "Device '$DEVICE' mounted successfully"

        if [ ! -L "$HOME/media/remote" ]; then
          ln -s /run/user/$UID/gvfs $HOME/media/remote
        fi
      else
        echo -e "Failed to mount device from '$DEVICE'"
      fi
    fi
  else
    clear
    exit
  fi

  read -rep "Enter any char to continue (q to quit): " REPLY

  if [ "$REPLY" = "q" ]; then
    clear
    exit
  fi
done
