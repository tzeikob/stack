#!/bin/bash

set -o pipefail

source /opt/stack/utils
source /opt/stack/power/commands

# Shows the help message.
# Arguments:
#  mode: once or none
# Outputs:
#  A long help message.
show_help () {
  if [[ "${1}" == "once" ]]; then
    echo 'Usage: power [OPTIONS] COMMAND [OBJECT] [ARGUMENTS]...'

    echo -e '\nOPTIONS'
    printf ' %-20s %s\n' \
      '-h' 'Show this help message.' \
      '-q' 'Stay quiet and do not play beep sounds.'

    echo -e '\nCOMMANDS'
    printf ' %-20s %s\n' \
      'init screensaver' 'Initialize the screen saver.' \
      '' '' \
      'shutdown' 'Shut the system down.' \
      'reboot' 'Reboot the system.' \
      'suspend' 'Set system in suspend mode.' \
      'blank' 'Blank the screen.'

    return 0
  fi

  echo 'Usage: COMMAND [OBJECT] [ARGUMENTS]...'

  echo -e '\nCOMMANDS'
  printf ' %-36s %s\n' \
    'help' 'Show this help message.' \
    '' '' \
    'show status' 'Show the status of the system power.' \
    '' '' \
    'set action [<handler> [<action>]]' 'Set the action of a power handler to' \
    '' 'poweroff, reboot, suspend or ignore.' \
    'reset actions' 'Reset to default action for all power handlers.' \
    '' '' \
    'set screensaver <mins>' 'Set the interval of the screen saver,' \
    '' 'where 0 means deactivate the screensaver.' \
    '' '' \
    'set tlp on|off' 'Enable or disable power saving mode.' \
    'set charge start|stop <percent>' 'Set the battery charge thresholds.'
}

loop () {
  clear

  while true; do
    prompt power && history -s "${REPLY}"

    set -f
    set_separator line
    local args=($(xargs -n1 <<< "${REPLY}"))
    restore_separator && set +f

    local cmd="${args[0]}"
    local obj="${args[1]}"

    case "${cmd}${obj:+ ${obj}}" in
      'help') show_help;;
      'show status') show_status;;
      'set action') set_action "${args[2]}" "${args[3]}";;
      'set screensaver') set_screensaver "${args[2]}";;
      'set tlp') set_tlp "${args[2]}";;
      'set charge') set_charge "${args[2]}" "${args[3]}";;
      'reset actions') reset_actions;;
      'clear') clear && continue;;
      'quit') break;;
      '') continue;;
      *)
        echo 'Ooops, invalid or unknown command!'
        $(return 2);;
    esac && success || fail

    REPLY=''
  done

  clear
}

once () {
  while getopts 'hq' opt; do
    case "${opt}" in
     'h')
        show_help once
        return 0;;
     'q') QUIET='true';;
     *)
      echo 'Ooops, invalid or unknown option'
      return 2;;
    esac
  done

  shift $((OPTIND-1))

  local cmd="${1}"
  local obj="${2}"

  case "${cmd}${obj:+ ${obj}}" in
    'init screensaver') init_screensaver;;
    'shutdown') shutdown_system;;
    'reboot') reboot_system;;
    'suspend') suspend_system;;
    'blank') blank_screen;;
    *)
      echo 'Ooops, invalid or unknown command'
      return 2;;
  esac
}

if [[ $# -eq 0 ]]; then
  loop
else
  once "$@" && success || fail
fi

