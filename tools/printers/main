#!/bin/bash

set -o pipefail

source /opt/stack/utils
source /opt/stack/printers/commands

# Shows the help message.
# Arguments:
#  None
# Outputs:
#  A long help message.
show_help () {
  echo 'Usage: COMMAND [OBJECT] [ARGUMENTS]...'

  echo -e '\nCOMMANDS'
  printf ' %-40s %s\n' \
    'help' 'Show this help message.' \
    '' '' \
    'show status' 'Show a report of cups service and printers.' \
    'show printer [<name>]' 'Show the data of a printer.' \
    '' '' \
    'list printers' 'List all printers.' \
    'add printer <name> [<uri>]' 'Add a new printer.' \
    'remove printer [<name>]' 'Remove a printer.' \
    '' '' \
    'set quality [<name> [600dpi|1200dpi]]' 'Set the print quality of a printer.' \
    'set size [<name> [<size>]]' 'Set the default page size of a printer.' \
    'set paper [<name> [<type>]]' 'Set the paper type of a printer.' \
    'set toner [<name> [standard|save]]' 'Set the toner mode of a printer.' \
    'set onerror [<name> [<policy>]]' 'Set the on error policy of a printer.' \
    'set default [<name>]' 'Set a printer as default print destination.' \
    '' '' \
    'share printer [<name>]' 'Share a printer to the local network.' \
    'unshare printer [<name>]' 'Unshare a printer of the local network.' \
    '' '' \
    'list jobs' 'List all queued print jobs.' \
    'cancel job [<id>]' 'Cancel a queued print job.' \
    '' '' \
    'restart' 'Restart the cups service.'
}

loop () {
  clear

  while true; do
    prompt printers && history -s "${REPLY}"

    set -f
    set_separator line
    local args=($(xargs -n1 <<< "${REPLY}"))
    restore_separator && set +f

    local cmd="${args[0]}"
    local obj="${args[1]}"

    case "${cmd}${obj:+ ${obj}}" in
      'help') show_help;;
      'show status') show_status;;
      'show printer') show_printer "${args[2]}";;
      'list printers') list_printers;;
      'list jobs') list_jobs;;
      'add printer') add_printer "${args[2]}" "${args[3]}";;
      'remove printer') remove_printer "${args[2]}";;
      'share printer') share_printer "${args[2]}";;
      'unshare printer') unshare_printer "${args[2]}";;
      'set quality') set_option "${args[2]}" 'Quality' "${args[3]}";;
      'set size') set_option "${args[2]}" 'PageSize' "${args[3]}";;
      'set paper') set_option "${args[2]}" 'MediaType' "${args[3]}";;
      'set toner') set_option "${args[2]}" 'TonerSaveMode' "${args[3]}";;
      'set onerror') set_option "${args[2]}" 'printer-error-policy' "${args[3]}";;
      'set default') set_default "${args[2]}";;
      'cancel job') cancel_job "${args[2]}";;
      'restart') restart;;
      'clear') clear && continue;;
      'quit') break;;
      '') continue;;
      *)
        echo 'Ooops, invalid or unknown command!'
        $(return 2);;
    esac && success || fail

    REPLY=''
  done

  clear
}

loop

