#!/bin/bash

set -o pipefail

source /opt/stack/utils
source /opt/stack/desktop/commands

# Shows the help message.
# Arguments:
#  mode: once or none
# Outputs:
#  A long help message.
show_help () {
  if [[ "${1}" == "once" ]]; then
    echo 'Usage: desktop COMMAND [OBJECT] [ARGUMENTS]...'

    echo -e '\nCOMMANDS'
    printf ' %-16s %s\n' \
      'help' 'Show this help message.' \
      '' '' \
      'init pointer' 'Initialize the pointer.' \
      'init tablets' 'Initialize any connected tablets.' \
      'init wallpaper' 'Initialize the desktop wallpaper.'

    return 0
  fi

  echo 'Usage: COMMAND [OBJECT] [ARGUMENTS]...'

  echo -e '\nCOMMANDS'
  printf ' %-36s %s\n' \
    'help' 'Show this help message.' \
    '' '' \
    'show status' 'Show the status of the desktop environment.' \
    'show pointer [<id>]' 'Show a pointing device.' \
    'show tablet [<name>]' 'Show a tablet device.' \
    '' '' \
    'list wallpapers' 'List the available wallapers.' \
    'list pointers' 'List the available pointing devices.' \
    'list tablets' 'List the connected tablets.' \
    '' '' \
    'set wallpaper [<name> [<mode>]]' 'Set the desktop wallpaper in center' \
    '' 'fill, scale, max or tile mode.' \
    'speed pointer [<factor>]' 'Set the pointer speed to a factor between' \
    '' '[0, 1] where 0 means slow and 1 fast.' \
    'scale tablet [<name> [<factor>]]' 'Scale down the area of a tablet (e.g. 0.5)' \
    '' 'or use factor 1 to reset scaling.' \
    'map tablet [<name> [<display>]]' 'Map a tablet to a screen display' \
    '' 'or just use desktop to reset mapping.'
}

loop () {
  clear

  while true; do
    prompt desktop && history -s "${REPLY}"

    set -f
    set_separator line
    local args=($(xargs -n1 <<< "${REPLY}"))
    restore_separator && set +f
  
    local cmd="${args[0]}"
    local obj="${args[1]}"

    case "${cmd}${obj:+ ${obj}}" in
      'help') show_help;;
      'show status') show_status;;
      'show pointer') show_pointer "${args[2]}";;
      'show tablet') show_tablet "${args[2]}";;
      'set wallpaper') set_wallpaper "${args[2]}" "${args[3]}";;
      'speed pointer') set_pointer_speed "${args[2]}";;
      'scale tablet') scale_tablet "${args[2]}" "${args[3]}";;
      'map tablet') map_tablet "${args[2]}" "${args[3]}";;
      'list wallpapers') list_wallpapers;;
      'list pointers') list_pointers;;
      'list tablets') list_tablets;;
      'clear') clear && continue;;
      'quit') break;;
      '') continue;;
      *)
        echo 'Ooops, invalid or unknown command!'
        $(return 2);;
    esac && success || fail

    REPLY=''
  done

  clear
}

once () {
  local cmd="${1}"
  local obj="${2}"

  case "${cmd}${obj:+ ${obj}}" in
    'help') show_help once;;
    'init pointer') init_pointer;;
    'init tablets') init_tablets;;
    'init wallpaper') init_wallpaper;;
    *)
      echo 'Ooops, invalid or unknown command'
      return 2;;
  esac
}

if [[ $# -eq 0 ]]; then
  loop
else
  once "$@" && success || fail
fi

