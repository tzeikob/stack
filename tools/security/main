#!/bin/bash

set -o pipefail

source /opt/stack/utils
source /opt/stack/security/commands

# Shows the help message.
# Arguments:
#  mode: once or none
# Outputs:
#  A long help message.
show_help () {
  if [[ "${1}" == "once" ]]; then
    echo 'Usage: security COMMAND [OBJECT] [ARGUMENTS]...'

    echo -e '\nCOMMANDS'
    printf ' %-16s %s\n' \
      'help' 'Show this help message.' \
      '' '' \
      'init locker' 'Initialize the screen locker.' \
      '' '' \
      'lock screen' 'Lock the screen.' \
      'logout user' 'Logout the user.'

    return 0
  fi

  echo 'Usage: COMMAND [OBJECT] [ARGUMENTS]...'

  echo -e '\nCOMMANDS'
  printf ' %-25s %s\n' \
    'help' 'Show this help message.' \
    '' '' \
    'show status' 'Show the status of the system security.' \
    '' '' \
    'set password' 'Set a new user password.' \
    'set attempts <max>' 'Set max failed attempts before password is blocked.' \
    'set unblock <time>' 'Set password unblock time in secs.' \
    'set interval <time>' 'Set consecutive password fails interval in secs.' \
    '' '' \
    'set locker <mins>' 'Set the interval of the screen locker,' \
    '' 'where 0 means deactivate the locker.'
}

loop () {
  clear

  while true; do
    prompt security && history -s "${REPLY}"

    set -f
    set_separator line
    local args=($(xargs -n1 <<< "${REPLY}"))
    restore_separator && set +f

    local cmd="${args[0]}"
    local obj="${args[1]}"

    case "${cmd}${obj:+ ${obj}}" in
      'help') show_help;;
      'show status') show_status;;
      'set locker') set_screen_locker "${args[2]}";;
      'set password') set_user_password;;
      'set attempts') set_faillock_attempts "${args[2]}";;
      'set unblock') set_faillock_unblock "${args[2]}";;
      'set interval') set_faillock_interval "${args[2]}";;
      'clear') clear && continue;;
      'quit') break;;
      '') continue;;
      *)
        echo 'Ooops, invalid or unknown command!'
        $(return 2);;
    esac && success || fail

    REPLY=''
  done

  clear
}

once () {
  local cmd="${1}"
  local obj="${2}"

  case "${cmd}${obj:+ ${obj}}" in
    'help') show_help once;;
    'init locker') init_screen_locker;;
    'lock screen') lock_screen;;
    'logout user') logout_user;;
    *)
      echo 'Ooops, invalid or unknown command'
      return 2;;
  esac
}

if [[ $# -eq 0 ]]; then
  loop
else
  once "$@" && success || fail
fi

