#!/bin/bash

set -o pipefail

source /opt/stack/utils
source /opt/stack/clock/commands

# Shows the help message.
# Arguments:
#  None
# Outputs:
#  A long help message.
show_help () {
  echo 'Usage: COMMAND [OBJECT] [ARGUMENTS]...'

  echo -e '\nCOMMANDS'
  printf ' %-30s %s\n' \
    'help' 'Show this help message.' \
    '' '' \
    'show status' 'Show the system date time status.' \
    '' '' \
    'set timezone [<Region/City>]' 'Set the system timezone.' \
    'set time <HH:MM:SS>' 'Set the system local time.' \
    'set date <YYYY-mm-dd>' 'Set the system date.' \
    '' '' \
    'set ntp on|off' 'Enable or disable the NTP service.' \
    'set rtc local|utc' 'Set the hardware clock to local or UTC time.' \
    '' '' \
    'sync rtc' 'Sync the hardware clock from the system clock.'
}

loop () {
  clear

  while true; do
    prompt clock && history -s "${REPLY}"

    set -f
    set_separator line
    local args=($(xargs -n1 <<< "${REPLY}"))
    restore_separator && set +f

    local cmd="${args[0]}"
    local obj="${args[1]}"

    case "${cmd}${obj:+ ${obj}}" in
      'help') show_help;;
      'show status') show_status;;
      'set ntp') set_ntp "${args[2]}";;
      'set timezone') set_timezone "${args[2]}";;
      'set time') set_time "${args[2]}";;
      'set date') set_date "${args[2]}";;
      'set rtc') set_rtc "${args[2]}";;
      'sync rtc') sync_rtc;;
      'clear') clear && continue;;
      'quit') break;;
      '') continue;;
      *)
        echo 'Ooops, invalid or unknown command!'
        $(return 2);;
    esac && success || fail

    REPLY=''
  done

  clear
}

loop

