#!/bin/bash

set -o pipefail

source /opt/stack/utils
source /opt/stack/clock/commands

# Shows the help message.
# Arguments:
#  mode: loop or once
# Outputs:
#  A long help message.
show_help () {
  local mode="${1:-"once"}"

  if [[ "${mode}" == "once" ]]; then
    echo 'Usage: clock [OPTIONS] COMMAND [OBJECT] [ARGUMENTS]...'
    
    echo -e '\nOPTIONS'
    printf ' %-10s %s\n' \
      '-h' 'Show this help message.' \
      '-q' 'Stay quiet and do not play beep sounds.'
  
    echo -e '\nCOMMANDS'
  else
    echo 'Usage: COMMAND [OBJECT] [ARGUMENTS]...'

    echo -e '\nCOMMANDS'
    printf ' %-30s %s\n' \
      'help' 'Show this help message.'
  fi

  printf ' %-30s %s\n' \
    'show status' 'Show the system date time status.' \
    '' '' \
    'set timezone [<Region/City>]' 'Set the system timezone.' \
    'set time <HH:MM:SS>' 'Set the system local time.' \
    'set date <YYYY-mm-dd>' 'Set the system date.' \
    '' '' \
    'set ntp on|off' 'Enable or disable the NTP service.' \
    'set rtc local|utc' 'Set the hardware clock to local or UTC time.' \
    '' '' \
    'sync rtc' 'Sync the hardware clock from the system clock.'
}

run () {
  local opt=''

  while getopts ':hq' opt; do
    case "${opt}" in
     'h')
        show_help once
        return 0;;
     'q') QUIET='true';;
     *)
      echo "Ooops, invalid or unknown option -${OPTARG}!"
      $(exit 2) || beep
      return $?;;
    esac
  done

  shift $((OPTIND-1))

  local mode='once'
  if [[ $# -eq 0 ]]; then
    mode='loop'
    clear
  fi

  while true; do
    if [[ "${mode}" == "loop" ]]; then
      prompt clock
    else
      REPLY="$@"
    fi

    set -f
    set_separator line
    local args=($(xargs -n1 <<< "${REPLY}"))
    restore_separator && set +f
    REPLY=''

    local cmd="${args[0]}"
    local obj="${args[1]}"

    if [[ "${mode}" == "loop" ]]; then
      case "${cmd}${obj:+ ${obj}}" in
        'help') clear && show_help loop && continue;;
        'clear') clear && continue;;
        'quit') break;;
        '') continue;;
      esac
    fi

    case "${cmd}${obj:+ ${obj}}" in
      'show status') show_status;;
      'set ntp') set_ntp "${args[2]}" && beep;;
      'set timezone') set_timezone "${args[2]}" && beep;;
      'set time') set_time "${args[2]}" && beep;;
      'set date') set_date "${args[2]}" && beep;;
      'set rtc') set_rtc "${args[2]}" && beep;;
      'sync rtc') sync_rtc && beep;;
      *)
        echo 'Ooops, invalid or unknown command!'
        $(return 2);;
    esac || beep

    local exit_code=$?
    if [[ "${mode}" == "once" ]]; then
      return ${exit_code}
    fi
  done

  clear
}

run "$@"

