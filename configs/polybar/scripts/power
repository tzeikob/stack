#!/bin/bash

set -o pipefail

source /opt/stack/commons/utils.sh

# Reads the system's power and battery data and
# prints the current status of power suplly.
run () {
  local batteries=''
  batteries="$(acpi -b -i | jc --acpi)"

  if has_failed; then
    echo ' Err!'
    return 0
  fi
	
  # Check if the system has not a battery device
  local query='if length > 0 then true else false end'

  local has_battery='false'
  has_battery="$(echo "${batteries}" | jq -cr "${query}")"

  if has_failed; then
    echo ' Err!'
    return 0
  fi

  # Read the AC adapter status in case no battery found
  if is_not_true "${has_battery}"; then
    local query='if length > 0 then .[0]."on-line" else false end'

    local is_online='true'
    is_online="$(acpi -a | jc --acpi | jq -cr "${query}")"

    if has_failed || is_not_true "${is_online}"; then
      echo ' Err!'
    else
      echo ' Online'
    fi

    return 0
  fi
	
  # Otherwise resolve battery status
  local state=''
  state="$(echo "${batteries}" | jq -cr '.[0].state')"

  local charge=''
  charge="$(echo "${batteries}" | jq -cr '.[0].charge_percent')"

  local output=''

  if equals "${state}" 'Charging'; then
    if is_true "${charge} < 99"; then
      output=" ${charge}%"
		else
      output=" Full"
    fi
  elif is_true "${charge} >= 99"; then
    output=" Full"
  elif is_true "${charge} <= 10"; then
    output=" Drained"
  else
    output=" ${charge}%"
  fi

  echo "${output}"
}

run "$@"

