
branch () {
  git branch 2> /dev/null | sed -e "/^[^*]/d" -e "s/* \(.*\)/  [\\1]/"
}

timer_start () {
  local now=$(date +%s.%3N)
  TIMER=${TIMER:-${now}}
}

timer_stop () {
  local now=$(date +%s.%3N)
  ELAPSED=$(echo "${now}" | awk -v timer=${TIMER} '{
    elapsed = ($0 - timer)

    if (elapsed < 0.01) printf "00%.0fn", elapsed*1000
    else if (elapsed < 0.1) printf "0%.0fn", elapsed*1000
    else if (elapsed < 1) printf "%.0fn", elapsed*1000
    else if (elapsed < 10) printf "00%.0fs", elapsed
    else if (elapsed < 60) printf "0%.0fs", elapsed
    else if (elapsed < 600) printf "00%.0fm", (elapsed/60)
    else if (elapsed < 3600) printf "0%.0fm", (elapsed/60)
    else if (elapsed < 36000) printf "00%.0fh", (elapsed/60/60)
    else if (elapsed < 86400) printf "0%.0fh", (elapsed/60/60)
    else print "slow"
  }')
  
  unset TIMER
}

trap 'timer_start' DEBUG

if [ "$PROMPT_COMMAND" == "" ]; then
  PROMPT_COMMAND="timer_stop"
else
  PROMPT_COMMAND="$PROMPT_COMMAND; timer_stop"
fi

PS1="\`if [ \$? = 0 ]; then echo \[\e[1\;33m\]; else echo \[\e[1\;31m\]; fi\`\${ELAPSED}\[\e[m\] \W\[\e[0;35m\]\$(branch)\[\e[m\]  "
PS2=" "
