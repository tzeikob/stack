#!/usr/bin/env bash

source /opt/stack/utils

prompt () {
  local YELLOW=$'\e[0;33m'
  local RS=$'\e[m'
  local FG=$YELLOW

  local NOW=$(date +"%H:%M")
  local TZ=$(timedatectl show | grep Timezone | awk -F/ '{print $2}')

  read -rep "[clock:$FG${TZ}$RS $FG${NOW}$RS] " REPLY
}

show_status () {
  timedatectl status | awk -F: '{ \
    i=index($0,":"); l=$1; \
    gsub(/^[ \t]+|[ \t]+$/, "", l); \
    printf "%-28s\t%s\n", l":", substr($0, i+1)}'
}

set_ntp () {
  local STATUS=$1

  if [[ ! "$STATUS" =~ ^(on|off)$ ]]; then
    echo "Invalid NTP status argument: '$STATUS'"
    return 1
  fi

  timedatectl set-ntp "$STATUS" &&
    echo "NTP set to $STATUS" ||
    echo "Something went wrong setting NTP"
}

set_timezone () {
  local TIMEZONE=$1

  timedatectl set-timezone "$TIMEZONE" &&
    echo "Timezone has been set to $TIMEZONE" ||
    echo "Something went wrong setting the timezone"
}

set_time () {
  local TIME=$1

  timedatectl set-time "$TIME" &&
    echo "Time has been set successfully" ||
    echo "Something went wrong setting the time"
}

help () {
  echo "Usage: COMMAND [OBJECT] [ARGUMENTS]..."

  echo -e "\nOBJECTS"
  printf " %-25s\t%s\n" \
      "..." "An object to handle ..."

  echo -e "\nCOMMANDS"
  printf " %-25s\t%s\n" \
    "show status" "Show the current date time status of the system." \
    "set ntp on|off" "Enable or disable the NTP service." \
    "set timezone <Region/City>" "Set the timezone to the given region." \
    "set time <HH:MM:SS>" "Set the system local time to the given time." \
    "help" "Show this help message."
}

loop () {
  clear

  while true; do
    prompt && history -s "$REPLY"

    local CMD=($(echo "$REPLY"))

    if [ "${CMD[0]}" = "help" ]; then
      help
      continue
    elif [ "${CMD[0]}" = "clear" ]; then
      clear
      continue
    elif [ "${CMD[0]}" = "quit" ]; then
      break
    elif [ -z "${CMD[0]}" ]; then
      continue
    fi

    case "${CMD[0]}" in
      "show")
        case "${CMD[1]}" in
          "status") show_status;;
          *) echo "Unknown or invalid command: '$REPLY'";;
        esac;;
      "set")
        case "${CMD[1]}" in
          "ntp") set_ntp "${CMD[2]}";;
          "timezone") set_timezone "${CMD[2]}";;
          "time") set_time "${CMD[2]}";;
          *) echo "Unknown or invalid command: '$REPLY'";; 
        esac;;
      *) echo "Unknown or invalid command: '$REPLY'";; 
    esac
  done

  clear
}

loop
