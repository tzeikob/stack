#!/usr/bin/env bash

set -o pipefail
source /opt/stack/utils

require "systemd"

prompt () {
  local STATUS=$(localectl status | awk -F= '/System Locale/{print $2}')

  read -rep "[langs:$YE${STATUS}$RS] " REPLY
}

show_status () {
  localectl status | awk -F':' '{
    i=index($0,":");
    if (i > 0) {
      l=$1;
      gsub(/^[ \t]+|[ \t]+$/, "", l);
      printf "%-14s %s\n", l":", substr($0, i+1)
    } else {
      gsub(/ /,""); printf "%-14s %s\n", "", " "$0
    }
  }'

  local LOCALES="$(locale -a | awk '{ORS=", ";} {print $0}')"
  echo "Locales:        [${LOCALES::-2}]"
}

set_keymap () {
  local MAP=$1

  if [ -z "$MAP" ]; then
    local MAPS="$(localectl --no-pager list-keymaps | awk '{ORS="'$AES'";} {print $0}')"

    pick_one "Select a key map:" "$MAPS" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    MAP="$(value "$REPLY")"
  fi

  if ! localectl --no-pager list-keymaps | grep -qE "^${MAP}$"; then
    echo "Invalid key map value"
    return 1
  fi

  localectl set-keymap --no-convert "$MAP" &&
    echo "Keyboard map set to $MAP" ||
    echo "Failed to set keyboard map"
}

set_language () {
  local LANG_ARG=$1

  if [ -z "$LANG_ARG" ]; then
    local LOCALES="$(cat /etc/locale.gen | tail -n +24 | tr -d '#' | trim | awk '{ORS="'$AES'";} {print $1}')"

    pick_one "Select a language:" "$LOCALES" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    LANG_ARG="$(value "$REPLY")"
  fi

  if [[ ! "$LANG_ARG" =~ ^[a-zA-Z0-9_.-]+$ ]]; then
    echo "Invalid language value"
    return 1
  elif ! cat /etc/locale.gen | grep -qE "^#?$LANG_ARG .*$"; then
    echo "Invalid language value"
    return 1
  fi

  sudo sed -i "s/\(LANG=\).*/\1${LANG_ARG}/" /etc/locale.conf &&
  sudo sed -i "s/\(LANGUAGE=\).*/\1${LANG_ARG}:en:C/" /etc/locale.conf &&
    unset "LANG" "LANGUAGE" &&
    source /etc/profile.d/locale.sh &&
    echo "Language has been set to $LANG_ARG" ||
    echo "Failed to set language"
}

set_locale () {
  local NAME=${1^^}
  local LOCALE=$2

  local RE='(CTYPE|NUMERIC|TIME|COLLATE|MONETARY|MESSAGES|PAPER|'
  RE+='NAME|ADDRESS|TELEPHONE|MEASUREMENT|IDENTIFICATION)'

  if [[ ! "$NAME" =~ $RE ]]; then
    echo "Invalid locale variable name"
    return 1
  fi
  
  if [ -z "$LOCALE" ]; then
    local LOCALES="$(cat /etc/locale.gen | tail -n +24 | tr -d '#' | trim | awk '{ORS="'$AES'";} {print $1}')"

    pick_one "Select a locale:" "$LOCALES" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    LOCALE="$(value "$REPLY")"
  fi

  if [[ ! "$LOCALE" =~ ^[a-zA-Z0-9_.-]+$ ]]; then
    echo "Invalid locale value"
    return 1
  elif ! cat /etc/locale.gen | grep -qE "^#?$LOCALE .*$"; then
    echo "Invalid locale value"
    return 1
  fi

  sudo sed -i "s/\(${NAME}=\).*/\1${LOCALE}/" /etc/locale.conf &&
    unset "$NAME" &&
    source /etc/profile.d/locale.sh &&
    echo "Locale $NAME has been set to $LOCALE" ||
    echo "Failed to set locale variable"
}

set_options () {
  local VALUE=$1

  if [ -z "$VALUE" ]; then
    local OPTIONS="$(localectl --no-pager list-x11-keymap-options | awk '{ORS="'$AES'";} {print $0}')"

    pick_one "Select a keyboard options entry:" "$OPTIONS" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    VALUE="$(value "$REPLY")"
  fi
  
  if ! localectl --no-pager list-x11-keymap-options | grep -qw "$VALUE"; then
    echo "Invalid keyboard options value"
    return 1
  fi

  local LAYOUTS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbLayout/{print $3}' | tr -d '"'
  )

  local MODEL=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbModel/{print $3}' | tr -d '"'
  )

  localectl --no-convert set-x11-keymap "$LAYOUTS" "$MODEL" "" "$VALUE" &&
    setxkbmap -layout "$LAYOUTS" -model "$MODEL" -option "$VALUE" &&
    echo "Keyboard options $VALUE have been set" ||
    echo "Failed to set keyboard options"
}

set_model () {
  local NAME=$1

  if [ -z "$NAME" ]; then
    local MODELS="$(localectl --no-pager list-x11-keymap-models | awk '{ORS="'$AES'";} {print $0}')"

    pick_one "Select a keyboard model:" "$MODELS" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    NAME="$(value "$REPLY")"
  fi
  
  if ! localectl --no-pager list-x11-keymap-models | grep -qw "$NAME"; then
    echo "Invalid keyboard model name"
    return 1
  fi

  local LAYOUTS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbLayout/{print $3}' | tr -d '"'
  )

  local OPTIONS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbOptions/{print $3}' | tr -d '"'
  )

  localectl --no-convert set-x11-keymap "$LAYOUTS" "$NAME" "" "$OPTIONS" &&
    setxkbmap -layout "$LAYOUTS" -model "$VALUE" -option "$OPTIONS" &&
    echo "Keyboard model $NAME has been set" ||
    echo "Failed to set keyboard model"
}

add_locale () {
  local LOCALE=$1

  if [ -z "$LOCALE" ]; then
    local LOCALES="$(cat /etc/locale.gen | tail -n +24 | trim |
      awk '{ORS="'$AES'";} {gsub(/#/,"",$0); print $0}')"

    pick_one "Select a locale:" "$LOCALES" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    LOCALE="$(value "$REPLY")"
  fi

  if [[ ! "$LOCALE" =~ ^[a-zA-Z[:blank:]0-9_.-]+$ ]]; then
    echo "Malformed locale value"
    return 1
  elif grep -qE "^\s*${LOCALE}\s*$" /etc/locale.gen; then
    echo "Locale is already added"
    return 1
  elif ! grep -qE "^\s*#\s*${LOCALE}\s*$" /etc/locale.gen; then
    echo "Invalid locale value"
    return 1
  fi

  sudo sed -i "s/\s*#\s*\(${LOCALE}\)\s*/\1/" /etc/locale.gen &&
    sudo locale-gen &&
    echo "Locale $LOCALE has been added" ||
    echo "Failed to add locale"
}

remove_locale () {
  local LOCALE=$1

  if [ -z "$LOCALE" ]; then
    local LOCALES="$(cat /etc/locale.gen | tail -n +24 | trim |
      awk '{ORS="'$AES'";} /^\s*[a-zA-Z\s0-9_.-]+/{print $0}')"

    pick_one "Select a locale:" "$LOCALES" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    LOCALE="$(value "$REPLY")"
  fi

  if [[ ! "$LOCALE" =~ ^[a-zA-Z[:blank:]0-9_.-]+$ ]]; then
    echo "Malformed locale value"
    return 1
  elif grep -qE "^\s*#\s*${LOCALE}\s*$" /etc/locale.gen; then
    echo "Locale is already removed"
    return 1
  elif ! grep -qE "^\s*${LOCALE}\s*$" /etc/locale.gen; then
    echo "Invalid locale value"
    return 1
  fi

  sudo sed -i "s/\s*\(${LOCALE}\)\s*/#\1/" /etc/locale.gen &&
    sudo locale-gen &&
    echo "Locale $LOCALE has been removed" ||
    echo "Failed to remove locale"
}

add_layout () {
  local LANG_ARG=$1

  if [ -z "$LANG_ARG" ]; then
    local LANGUAGES="$(localectl --no-pager list-x11-keymap-layouts | awk '{ORS="'$AES'";} {print $0}')"

    pick_one "Select a language:" "$LANGUAGES" "vertical-6" || return 1
    [ -z "$REPLY" ] && return

    LANG_ARG="$(value "$REPLY")"
  fi

  if [[ ! "$LANG_ARG" =~ ^[a-z]{2,6}$ ]]; then
    echo "Invalid layout language"
    return 1
  elif ! localectl --no-pager list-x11-keymap-layouts | grep -qw "$LANG_ARG"; then
    echo "Invalid layout language"
    return 1
  fi

  local LAYOUTS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbLayout/{print $3}' | tr -d '"'
  )

  if [[ "$LAYOUTS" =~ "$LANG_ARG" ]]; then
    echo "Layout language $LANG_ARG is already added"
    return 1
  fi

  if [ -n "$LAYOUTS" ]; then
    confirm "Want to set this layout as default?" || return 1
    [ -z "$REPLY" ] && return

    if [ "$(value "$REPLY")" = "yes" ]; then
      LAYOUTS="$LANG_ARG,$LAYOUTS"
    else
      LAYOUTS="$LAYOUTS,$LANG_ARG"
    fi
  else
    LAYOUTS="$LANG_ARG"
  fi

  local MODEL=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbModel/{print $3}' | tr -d '"'
  )

  local OPTIONS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbOptions/{print $3}' | tr -d '"'
  )

  localectl --no-convert set-x11-keymap "$LAYOUTS" "$MODEL" "" "$OPTIONS" &&
    setxkbmap -layout "$LAYOUTS" -model "$MODEL" -option "$OPTIONS" &&
    echo "Kayboard Layout $LANG_ARG added" ||
    echo "Failed to add keyboard layout"
}

remove_layout () {
  local LANG_ARG=$1

  local LAYOUTS=$(cat /etc/X11/xorg.conf.d/00-keyboard.conf | awk '/XkbLayout/{print $3}' | tr -d '"')

  if [ -z "$LAYOUTS" ]; then
    echo "No keyboard layouts have set yet"
    return 1
  fi

  if [ -z "$LANG_ARG" ]; then
    local LANGUAGES="$(echo "$LAYOUTS" | tr ',' '\n' | awk '{ORS="'$AES'";} {print $0}')"

    pick_one "Select a language:" "$LANGUAGES" "horizontal" || return 1
    [ -z "$REPLY" ] && return

    LANG_ARG="$(value "$REPLY")"
  fi

  if [[ ! "$LANG_ARG" =~ ^[a-z]{2,6}$ ]]; then
    echo "Invalid layout language"
    return 1
  elif ! localectl --no-pager list-x11-keymap-layouts | grep -qw "$LANG_ARG"; then
    echo "Invalid layout language"
    return 1
  elif [ "$LANG_ARG" = "us" ]; then
    echo "The us layout cannot be removed"
    return 1
  elif [ "$LAYOUTS" = "$LANG_ARG" ]; then
    echo "Cannot remove the only keyboard layout"
    return 1
  elif [[ ! "$LAYOUTS" =~ "$LANG_ARG" ]]; then
    echo "Layout $LANG_ARG not found in keyboard layouts"
    return 1
  fi

  if [[ "$LAYOUTS" =~ "${LANG_ARG}," ]]; then
    LAYOUTS=${LAYOUTS//${LANG_ARG},/}
  else
    LAYOUTS=${LAYOUTS//,${LANG_ARG}/}
  fi

  local MODEL=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbModel/{print $3}' | tr -d '"'
  )

  local OPTIONS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbOptions/{print $3}' | tr -d '"'
  )

  localectl --no-convert set-x11-keymap "$LAYOUTS" "$MODEL" "" "$OPTIONS" &&
    setxkbmap -layout "$LAYOUTS" -model "$MODEL" -option "$OPTIONS" &&
    echo "Keyboard layout $LANG_ARG has been removed" ||
    echo "Failed to remove keyboard layout"
}

order_layouts () {
  local LAYOUTS=$(cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbLayout/{gsub(/"/,"",$0); gsub(/,/,"'$AES'",$0); print $3}')
  
  local LEN=$(count "$LAYOUTS")

  if [ ! $LEN -gt 0 ]; then
    echo "No keyboard layouts have set yet"
    return 1
  fi

  pick_many "Pick layouts by order:" "$LAYOUTS" "$LEN" "$LEN" "horizontal" || return 1
  [ -z "$REPLY" ] && return

  local ORDERED=""
  local I=0
  for ((I=0; I<$LEN; I++)); do
    [ $I -gt 0 ] && ORDERED+=","

    local LAYOUT="$(element "$REPLY" "$I" | value)"
    ORDERED+="$LAYOUT"
  done

  local MODEL=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbModel/{print $3}' | tr -d '"'
  )

  local OPTIONS=$(
    cat /etc/X11/xorg.conf.d/00-keyboard.conf |
    awk '/XkbOptions/{print $3}' | tr -d '"'
  )

  localectl --no-convert set-x11-keymap "$ORDERED" "$MODEL" "" "$OPTIONS" &&
    setxkbmap -layout "$ORDERED" -model "$MODEL" -option "$OPTIONS" &&
    echo "Keyboard layouts set in $ORDERED order" ||
    echo "Failed to set keyboard layout order"
}

help () {
  echo "Usage: COMMAND [OBJECT] [ARGUMENTS]..."

  echo -e "\nCOMMANDS"
  printf " %-33s\t%s\n" \
    "help" "Show this help message." \
    "show status" "Show the system locale and keyboard status." \
    "" "" \
    "set language [<language>]" "Set the system's language." \
    "set keymap [<map>]" "Set the keyboard's virtual console keymap." \
    "set options [<value>]" "Set a keyboard layout options." \
    "set model [<name>]" "Set the model of the keyboard." \
    "" "" \
    "set locale <name> [<locale>]" "Set a locale variable, where name could be" \
    "" "ctype, numeric, time, collate, monetary," \
    "" "messages, paper, name, address, telephone," \
    "" "measurement, identification." \
    "add locale [<locale>]" "Add a locale to the system's locales." \
    "remove locale [<locale>]" "Remove a locale from the system's locales." \
    "" "" \
    "add layout [<language>]" "Add a keyboard layout language." \
    "remove layout [<language>]" "Remove a keyboard layout language." \
    "order layouts" "Set the order of keyboard layouts."
}

loop () {
  clear

  while true; do
    prompt && history -s "$REPLY"

    set -f
    set_separator "line"
    local CMD=($(xargs -n1 <<< "$REPLY"))
    restore_separator && set +f

    if [ "${CMD[0]}" = "help" ]; then
      help
      continue
    elif [ "${CMD[0]}" = "clear" ]; then
      clear
      continue
    elif [ "${CMD[0]}" = "quit" ]; then
      break
    elif [ -z "${CMD[0]}" ]; then
      continue
    fi

    case "${CMD[0]}" in
      "show")
        case "${CMD[1]}" in
          "status") show_status;;
          *) echo "Unknown or invalid command";;
        esac;;
      "set")
        case "${CMD[1]}" in
          "keymap") set_keymap "${CMD[2]}";;
          "language") set_language "${CMD[2]}";;
          "locale") set_locale "${CMD[2]}" "${CMD[3]}";;
          "options") set_options "${CMD[2]}";;
          "model") set_model "${CMD[2]}";;
          *) echo "Unknown or invalid command";;
        esac;;
      "add")
        case "${CMD[1]}" in
          "locale") add_locale "${CMD[2]}";;
          "layout") add_layout "${CMD[2]}";;
          *) echo "Unknown or invalid command";;
        esac;;
      "remove")
        case "${CMD[1]}" in
          "locale") remove_locale "${CMD[2]}";;
          "layout") remove_layout "${CMD[2]}";;
          *) echo "Unknown or invalid command";;
        esac;;
      "order")
        case "${CMD[1]}" in
          "layouts") order_layouts;;
          *) echo "Unknown or invalid command";;
        esac;;
      *) echo "Unknown or invalid command";; 
    esac
  done

  clear
}

loop