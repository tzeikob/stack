#!/usr/bin/env bash

set -f

source /opt/stack/utils

prompt () {
  local YELLOW=$'\e[0;33m'
  local RS=$'\e[m'
  local FG=$YELLOW

  local LOCALE=$(localectl status | awk -F= '/System Locale/{print $2}')

  read -rep "[langs:$FG${LOCALE}$RS] " REPLY
}

show_status () {
  localectl status | head -n 5 | awk -F: '{ \
    i=index($0,":"); l=$1; \
    gsub(/^[ \t]+|[ \t]+$/, "", l); \
    printf "%-12s\t%s\n", l":", substr($0, i+1)}'
}

set_keymap () {
  local KEYMAP=$1

  if ! localectl list-keymaps | grep -qE "^${KEYMAP}$"; then
    echo "Invalid keymap value: '$KEYMAP'"
    return 1
  fi

  localectl set-keymap --no-convert "$KEYMAP" &&
    echo "Keyboard keymap set to $KEYMAP" ||
    echo "Something went setting up the keymap"
}

help () {
  echo "Usage: COMMAND [OBJECT] [ARGUMENTS]..."

  echo -e "\nOBJECTS"
  printf " %-25s\t%s\n" \
      "keymap" "An object to handle the keyboard keymap."

  echo -e "\nCOMMANDS"
  printf " %-25s\t%s\n" \
    "show status" "Show the locale and languages status of the system." \
    "set keymap <keymap>" "Set the keyboard's console keymap." \
    "help" "Show this help message."
}

loop () {
  clear

  while true; do
    prompt && history -s "$REPLY"

    local OLD_IFS=$IFS && IFS=$'\n'
    local CMD=($(xargs -n1 <<< "$REPLY"))
    IFS=$OLD_IFS

    if [ "${CMD[0]}" = "help" ]; then
      help
      continue
    elif [ "${CMD[0]}" = "clear" ]; then
      clear
      continue
    elif [ "${CMD[0]}" = "quit" ]; then
      break
    elif [ -z "${CMD[0]}" ]; then
      continue
    fi

    case "${CMD[0]}" in
      "show")
        case "${CMD[1]}" in
          "status") show_status;;
          *) echo "Unknown or invalid command: '$REPLY'";;
        esac;;
      "set")
        case "${CMD[1]}" in
          "keymap") set_keymap "${CMD[2]}";;
          *) echo "Unknown or invalid command: '$REPLY'";; 
        esac;;
      *) echo "Unknown or invalid command: '$REPLY'";; 
    esac
  done

  clear
}

loop
