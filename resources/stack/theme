#!/usr/bin/env bash

set -f

source /opt/stack/utils

require "feh"

prompt () {
  local YELLOW=$'\e[0;33m'
  local RS=$'\e[m'
  local FG=$YELLOW

  local THEME_NAME=$(cat ~/.config/gtk-3.0/settings.ini |
    awk -F= '/gtk-theme-name/{print tolower($2)}')
  
  [ -z "$THEME_NAME" ] && THEME_NAME="none"

  read -rep "[theme:$FG${THEME_NAME}$RS] " REPLY
}

show_status () {
  local GTK_SETTINGS=$(cat ~/.config/gtk-3.0/settings.ini)

  local NAME=$(awk -F= '/gtk-theme-name/{print $2}' <<< "$GTK_SETTINGS")
  local ICON_THEME=$(awk -F= '/gtk-icon-theme-name/{print $2}' <<< "$GTK_SETTINGS")
  local FONT_NAME=$(awk -F= '/gtk-font-name/{print $2}' <<< "$GTK_SETTINGS")
  local CURSOR_THEME=$(awk -F= '/gtk-cursor-theme-name/{print $2}' <<< "$GTK_SETTINGS")
  local DARK_MODE=$(awk -F= '/gtk-application-prefer-dark-theme/{print $2}' <<< "$GTK_SETTINGS")
  [ "$DARK_MODE" = "1" ] && DARK_MODE="on" || DARK_MODE="off"

  local WALLPAPER=$(awk '/feh/{print $4}' ~/.config/bspwm/bspwmrc)
  
  printf '%-10s\t%s\n' \
    "Theme Name:" "$NAME" \
    "Icon Set:" "$ICON_THEME" \
    "Font Name:" "$FONT_NAME" \
    "Cursor Set:" "$CURSOR_THEME" \
    "Dark Mode:" "$DARK_MODE" \
    "Wallpaper:" "$WALLPAPER"
}

set_wallpaper () {
  local FILE_PATH=$1

  if [ -z "$FILE_PATH" ]; then
    echo "Missing file path argument"
    return 1
  elif [[ ! "$FILE_PATH" =~ ^/ ]]; then
    echo "File path should be an absolute path"
    return 1
  elif [ ! -f "$FILE_PATH" ]; then
    echo "Invalid file path: '$FILE_PATH'"
    return 1
  fi

  feh --no-fehbg --bg-fill "$FILE_PATH" &&
    sed -i "s;.*feh.*;feh --no-fehbg --bg-fill "$FILE_PATH" \&;" ~/.config/bspwm/bspwmrc &&
    echo "Wallpaper has been set to $FILE_PATH" ||
    echo "Something went wrong setting the wallpaper"
}

help () {
  echo "Usage: COMMAND [OBJECT] [ARGUMENTS]..."

  echo -e "\nCOMMANDS"
  printf " %-33s\t%s\n" \
    "help" "Show this help message." \
    "show status" "Show an overall report of the theme." \
    "" "" \
    "set wallpaper <file-path>" "Set the desktop wallpaper image."

  echo -e "\nOBJECTS"
  printf " %-33s\t%s\n" \
    "status" "The status of the status." \
    "wallpaper" "The desktop wallpaper image."
}

loop () {
  clear

  while true; do
    prompt && history -s "$REPLY"

    local OLD_IFS=$IFS && IFS=$'\n'
    local CMD=($(xargs -n1 <<< "$REPLY"))
    IFS=$OLD_IFS

    if [ "${CMD[0]}" = "help" ]; then
      help
      continue
    elif [ "${CMD[0]}" = "clear" ]; then
      clear
      continue
    elif [ "${CMD[0]}" = "quit" ]; then
      break
    elif [ -z "${CMD[0]}" ]; then
      continue
    fi

    case "${CMD[0]}" in
      "show")
        case "${CMD[1]}" in
          "status") show_status;;
          *) echo "Unknown or invalid command: '$REPLY'";;
        esac;;
      "set")
        case "${CMD[1]}" in
          "wallpaper") set_wallpaper "${CMD[2]}";;
          *) echo "Unknown or invalid command: '$REPLY'";;
        esac;;
      *) echo "Unknown or invalid command: '$REPLY'";; 
    esac
  done

  clear
}

loop
